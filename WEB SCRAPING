import os
import requests
from bs4 import BeautifulSoup
import zipfile

def download_pdf(url, filename):
    try:
        response = requests.get(url, stream=True, timeout=10)
        response.raise_for_status()  # Verifica se houve algum erro na requisição
        with open(filename, 'wb') as file:
            for chunk in response.iter_content(1024):
                file.write(chunk)
        print(f"Download concluído: {filename}")
    except requests.RequestException as e:
        print(f"Erro ao baixar {filename}: {e}")

def fetch_pdf_links(page_url, base_url):
    try:
        response = requests.get(page_url)
        response.raise_for_status()  # Verifica se houve algum erro na requisição
        soup = BeautifulSoup(response.text, 'html.parser')
        pdf_links = [
            base_url + link['href']
            for link in soup.find_all('a', href=True)
            if "anexo-i" in link['href'].lower() or "anexo-ii" in link['href'].lower()
        ]
        return pdf_links
    except requests.RequestException as e:
        print(f"Erro ao acessar a página da ANS: {e}")
        return []

def create_zip_file(filenames, zip_filename):
    with zipfile.ZipFile(zip_filename, 'w') as zipf:
        for filename in filenames:
            arcname = os.path.basename(filename)
            zipf.write(filename, arcname)
            os.remove(filename)  # Remove os PDFs após compactação
    print(f"Arquivo compactado: {zip_filename}")

def main():
    base_url = "https://www.gov.br"
    page_url = "https://www.gov.br/ans/pt-br/acesso-a-informacao/participacao-da-sociedade/atualizacao-do-rol-de-procedimentos"
    
    pdf_links = fetch_pdf_links(page_url, base_url)
    
    if not pdf_links:
        print("Nenhum anexo encontrado.")
        return
    
    pdf_filenames = []
    for pdf_url in pdf_links:
        filename = pdf_url.split("/")[-1]
        download_pdf(pdf_url, filename)
        pdf_filenames.append(filename)
    
    zip_filename = "anexos_ans.zip"
    create_zip_file(pdf_filenames, zip_filename)

if __name__ == "__main__":
    main()
